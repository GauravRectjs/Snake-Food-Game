{"ast":null,"code":"var _jsxFileName = \"G:\\\\reactwebsite\\\\snakegame\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, USeRef, useRef, useEffect } from \"react\";\nimport { useInterval } from './useInterval';\nimport { CANVAS_SIZE, SNAKE_START, APPLE_START, SCALE, SPEED, DIRECTIONS } from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [snake, setSnake] = useState(SNAKE_START);\n  const [apple, setApple] = useState(APPLE_START);\n  const [dir, setDir] = useState([0, -1]);\n  const [speed, setSpeed] = useState(null);\n  const [gameOver, setGameover] = useState(false);\n  const startGame = () => {};\n  const endGame = () => {};\n  const moveSnake = ({\n    keyCode\n  }) => setDir(DIRECTIONS[keyCode]);\n  const createApple = () => {};\n  const checkCollision = () => {};\n  const checkAppleCollision = () => {};\n  const gameLoop = () => {\n    const snakeCopy = JSON.parse(JSON.stringify(snake));\n    const newSnakeHead = [snakeCopy[0][0] + dir[0], snakeCopy[0][1] + dir[1]];\n    snakeCopy.unshift(newSnakeHead);\n    snakeCopy.pop();\n    setSnake(snakeCopy);\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.setTransform(SCALE, 0, 0, SCALE, 0, 0);\n\n    // Clear the entire canvas\n    context.clearRect(0, 0, CANVAS_SIZE[0], CANVAS_SIZE[1]);\n\n    // Draw Snake\n    context.fillStyle = 'green';\n    snake.forEach(({\n      x,\n      y\n    }) => context.fillRect(x, y, 1, 1));\n    // Draw Apple\n    context.fillStyle = 'red';\n    context.fillRect(apple[0], apple[1], 1, 1);\n  }, [snake, apple, gameOver]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => moveSnake(e),\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      style: {\n        border: `10px solid`,\n        width: `${CANVAS_SIZE[0]}px`,\n        height: `${CANVAS_SIZE[1]}px`\n      },\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 1\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"GAME OVER!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"qLQRHu+UVkeUKF6bBGz6N24glw8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","USeRef","useRef","useEffect","useInterval","CANVAS_SIZE","SNAKE_START","APPLE_START","SCALE","SPEED","DIRECTIONS","jsxDEV","_jsxDEV","App","_s","canvasRef","snake","setSnake","apple","setApple","dir","setDir","speed","setSpeed","gameOver","setGameover","startGame","endGame","moveSnake","keyCode","createApple","checkCollision","checkAppleCollision","gameLoop","snakeCopy","JSON","parse","stringify","newSnakeHead","unshift","pop","canvas","current","context","getContext","setTransform","clearRect","fillStyle","forEach","x","y","fillRect","role","tabIndex","onKeyDown","e","children","style","border","width","height","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["G:/reactwebsite/snakegame/src/App.js"],"sourcesContent":["import React, { useState,USeRef, useRef, useEffect} from \"react\";\nimport { useInterval } from './useInterval';\n\nimport {\n\n  CANVAS_SIZE,\n  SNAKE_START,\n  APPLE_START,\n  SCALE,\n  SPEED,\n  DIRECTIONS\n} from './constants';\n\nconst App = () => {\n\n  const canvasRef = useRef(null);\n\n  const [snake,setSnake] = useState(SNAKE_START);\n  const [apple,setApple] = useState(APPLE_START);\n  const [dir, setDir] = useState([0,-1]);\n  const [speed, setSpeed]  = useState(null);\n  const [gameOver, setGameover] = useState(false);\n\n  const startGame = ()=> {\n\n  }\n\n  const endGame = ()=> {\n\n  }\n\n  const moveSnake = ({ keyCode }) => setDir(DIRECTIONS[keyCode]);\n\n  const createApple = ()=> {\n\n  }\n\n  const checkCollision = ()=> {\n\n  }\n\n  const checkAppleCollision = ()=> {\n\n  }\n\n  const gameLoop = ()=> {\n\n    const snakeCopy = JSON.parse(JSON.stringify(snake));\n    const newSnakeHead = [snakeCopy[0][0] + dir[0],snakeCopy[0][1] + dir[1]];\n    snakeCopy.unshift(newSnakeHead);\n    snakeCopy.pop();\n    setSnake(snakeCopy);\n  }\n\n  useEffect(()=>{\n\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.setTransform(SCALE,0,0,SCALE,0,0);\n    \n    // Clear the entire canvas\n    context.clearRect(0, 0, CANVAS_SIZE[0], CANVAS_SIZE[1]);\n\n    // Draw Snake\n  context.fillStyle = 'green';\n  snake.forEach(({ x, y }) => context.fillRect(x, y, 1, 1));\n  // Draw Apple\n  context.fillStyle = 'red';\n  context.fillRect(apple[0], apple[1], 1, 1);\n  },[snake,apple,gameOver])\n\n  return(\n\n  <div role=\"button\" tabIndex=\"0\" onKeyDown={e => moveSnake(e)}>\n\n<canvas style={{border:`10px solid`, width: `${CANVAS_SIZE[0]}px`, height: `${CANVAS_SIZE[1]}px` }} ref={canvasRef} />\n\n{gameOver && <div>GAME OVER!</div>}\n<button onClick={startGame}>Start Game</button>\n  </div>\n\n\n   )\n\n}\n\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}