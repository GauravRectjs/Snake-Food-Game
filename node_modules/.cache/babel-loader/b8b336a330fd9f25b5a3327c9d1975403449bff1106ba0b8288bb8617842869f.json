{"ast":null,"code":"import _toConsumableArray from\"G:/reactwebsite/snakegame/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _classCallCheck from\"G:/reactwebsite/snakegame/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"G:/reactwebsite/snakegame/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"G:/reactwebsite/snakegame/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"G:/reactwebsite/snakegame/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from\"react\";import Snake from\"./Snake\";import Food from\"./Food\";import Button from\"./Button\";import Menu from\"./Menu\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var getRandomFood=function getRandomFood(){var min=1;var max=98;var x=Math.floor((Math.random()*(max-min+1)+min)/2)*2;var y=Math.floor((Math.random()*(max-min+1)+min)/2)*2;return[x,y];};var initialState={food:getRandomFood(),direction:\"RIGHT\",speed:100,route:\"menu\",snakeDots:[[0,0],[0,2]]};var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);_this.onKeyDown=function(e){e=e||window.event;switch(e.keyCode){case 37:_this.setState({direction:\"LEFT\"});break;case 38:_this.setState({direction:\"UP\"});break;case 39:_this.setState({direction:\"RIGHT\"});break;case 40:_this.setState({direction:\"DOWN\"});break;}};_this.moveSnake=function(){var dots=_toConsumableArray(_this.state.snakeDots);var head=dots[dots.length-1];if(_this.state.route===\"game\"){switch(_this.state.direction){case\"RIGHT\":head=[head[0]+2,head[1]];break;case\"LEFT\":head=[head[0]-2,head[1]];break;case\"DOWN\":head=[head[0],head[1]+2];break;case\"UP\":head=[head[0],head[1]-2];break;}dots.push(head);dots.shift();_this.setState({snakeDots:dots});}};_this.onRouteChange=function(){_this.setState({route:\"game\"});};_this.onDown=function(){var dots=_toConsumableArray(_this.state.snakeDots);var head=dots[dots.length-1];head=[head[0],head[1]+2];dots.push(head);dots.shift();_this.setState({direction:\"DOWN\",snakeDots:dots});};_this.onUp=function(){var dots=_toConsumableArray(_this.state.snakeDots);var head=dots[dots.length-1];head=[head[0],head[1]-2];dots.push(head);dots.shift();_this.setState({direction:\"UP\",snakeDots:dots});};_this.onRight=function(){var dots=_toConsumableArray(_this.state.snakeDots);var head=dots[dots.length-1];head=[head[0]+2,head[1]];dots.push(head);dots.shift();_this.setState({direction:\"RIGHT\",snakeDots:dots});};_this.onLeft=function(){var dots=_toConsumableArray(_this.state.snakeDots);var head=dots[dots.length-1];head=[head[0]-2,head[1]];dots.push(head);dots.shift();_this.setState({direction:\"LEFT\",snakeDots:dots});};_this.state=initialState;return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){setInterval(this.moveSnake,this.state.speed);document.onkeydown=this.onKeyDown;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){this.onSnakeOutOfBounds();this.onSnakeCollapsed();this.onSnakeEats();}},{key:\"onSnakeOutOfBounds\",value:function onSnakeOutOfBounds(){var head=this.state.snakeDots[this.state.snakeDots.length-1];if(this.state.route===\"game\"){if(head[0]>=100||head[1]>=100||head[0]<0||head[1]<0){this.gameOver();}}}},{key:\"onSnakeCollapsed\",value:function onSnakeCollapsed(){var _this2=this;var snake=_toConsumableArray(this.state.snakeDots);var head=snake[snake.length-1];snake.pop();snake.forEach(function(dot){if(head[0]==dot[0]&&head[1]==dot[1]){_this2.gameOver();}});}},{key:\"onSnakeEats\",value:function onSnakeEats(){var head=this.state.snakeDots[this.state.snakeDots.length-1];var food=this.state.food;if(head[0]==food[0]&&head[1]==food[1]){this.setState({food:getRandomFood()});this.increaseSnake();this.increaseSpeed();}}//increase\n},{key:\"increaseSnake\",value:function increaseSnake(){var newSnake=_toConsumableArray(this.state.snakeDots);newSnake.unshift([]);this.setState({snakeDots:newSnake});}},{key:\"increaseSpeed\",value:function increaseSpeed(){if(this.state.speed>10){this.setState({speed:this.state.speed-20});}}},{key:\"gameOver\",value:function gameOver(){alert(\"GAME OVER, your score is \".concat(this.state.snakeDots.length-2));this.setState(initialState);}},{key:\"render\",value:function render(){var _this$state=this.state,route=_this$state.route,snakeDots=_this$state.snakeDots,food=_this$state.food;return/*#__PURE__*/_jsx(\"div\",{children:route===\"menu\"?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Menu,{onRouteChange:this.onRouteChange})}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"game-area\",children:[/*#__PURE__*/_jsx(Snake,{snakeDots:snakeDots}),/*#__PURE__*/_jsx(Food,{dot:food})]}),/*#__PURE__*/_jsx(Button,{onDown:this.onDown,onLeft:this.onLeft,onRight:this.onRight,onUp:this.onUp})]})});}}]);return App;}(Component);export default App;","map":{"version":3,"names":["React","Component","Snake","Food","Button","Menu","jsx","_jsx","jsxs","_jsxs","getRandomFood","min","max","x","Math","floor","random","y","initialState","food","direction","speed","route","snakeDots","App","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","onKeyDown","e","window","event","keyCode","setState","moveSnake","dots","_toConsumableArray","state","head","length","push","shift","onRouteChange","onDown","onUp","onRight","onLeft","_createClass","key","value","componentDidMount","setInterval","document","onkeydown","componentDidUpdate","onSnakeOutOfBounds","onSnakeCollapsed","onSnakeEats","gameOver","_this2","snake","pop","forEach","dot","increaseSnake","increaseSpeed","newSnake","unshift","alert","concat","render","_this$state","children","className"],"sources":["G:/reactwebsite/snakegame/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Snake from \"./Snake\";\nimport Food from \"./Food\";\nimport Button from \"./Button\";\nimport Menu from \"./Menu\";\n\nconst getRandomFood = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  return [x, y];\n};\n\nconst initialState = {\n  food: getRandomFood(),\n  direction: \"RIGHT\",\n  speed: 100,\n  route: \"menu\",\n  snakeDots: [[0, 0], [0, 2]]\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    setInterval(this.moveSnake, this.state.speed);\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate() {\n    this.onSnakeOutOfBounds();\n    this.onSnakeCollapsed();\n    this.onSnakeEats();\n  }\n\n  onKeyDown = e => {\n    e = e || window.event;\n    switch (e.keyCode) {\n      case 37:\n        this.setState({ direction: \"LEFT\" });\n        break;\n      case 38:\n        this.setState({ direction: \"UP\" });\n        break;\n      case 39:\n        this.setState({ direction: \"RIGHT\" });\n        break;\n      case 40:\n        this.setState({ direction: \"DOWN\" });\n        break;\n    }\n  };\n\n  moveSnake = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n    if (this.state.route === \"game\") {\n      switch (this.state.direction) {\n        case \"RIGHT\":\n          head = [head[0] + 2, head[1]];\n          break;\n        case \"LEFT\":\n          head = [head[0] - 2, head[1]];\n          break;\n        case \"DOWN\":\n          head = [head[0], head[1] + 2];\n          break;\n        case \"UP\":\n          head = [head[0], head[1] - 2];\n          break;\n      }\n      dots.push(head);\n      dots.shift();\n      this.setState({\n        snakeDots: dots\n      });\n    }\n  };\n\n  onSnakeOutOfBounds() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if (this.state.route === \"game\") {\n      if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n        this.gameOver();\n      }\n    }\n  }\n\n  onSnakeCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] == dot[0] && head[1] == dot[1]) {\n        this.gameOver();\n      }\n    });\n  }\n\n  onSnakeEats() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n    if (head[0] == food[0] && head[1] == food[1]) {\n      this.setState({\n        food: getRandomFood() \n      });\n      this.increaseSnake();\n      this.increaseSpeed();\n    }\n  }\n//increase\n  increaseSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([]);\n    this.setState({\n      snakeDots: newSnake\n    });\n  }\n\n  increaseSpeed() {\n    if (this.state.speed > 10) {\n      this.setState({\n        speed: this.state.speed - 20\n      });\n    }\n  }\n\n  onRouteChange = () => {\n    this.setState({\n      route: \"game\"\n    });\n  };\n\n  gameOver() {\n    alert(`GAME OVER, your score is ${this.state.snakeDots.length - 2}`);\n    this.setState(initialState);\n  }\n\n  onDown = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n\n    head = [head[0], head[1] + 2];\n    dots.push(head);\n    dots.shift();\n    this.setState({\n      direction: \"DOWN\",\n      snakeDots: dots\n    });\n  };\n\n  onUp = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n\n    head = [head[0], head[1] - 2];\n    dots.push(head);\n    dots.shift();\n    this.setState({\n      direction: \"UP\",\n      snakeDots: dots\n    });\n  };\n\n  onRight = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n\n    head = [head[0] + 2, head[1]];\n    dots.push(head);\n    dots.shift();\n    this.setState({\n      direction: \"RIGHT\",\n      snakeDots: dots\n    });\n  };\n\n  onLeft = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n\n    head = [head[0] - 2, head[1]];\n    dots.push(head);\n    dots.shift();\n    this.setState({\n      direction: \"LEFT\",\n      snakeDots: dots\n    });\n  };\n\n  render() {\n    const { route, snakeDots, food } = this.state;\n    return (\n      <div>\n        {route === \"menu\" ? (\n          <div>\n            <Menu onRouteChange={this.onRouteChange} />\n          </div>\n        ) : (\n          <div>\n            <div className=\"game-area\">\n              <Snake snakeDots={snakeDots} />\n              <Food dot={food} />\n            </div>\n            <Button\n              onDown={this.onDown}\n              onLeft={this.onLeft}\n              onRight={this.onRight}\n              onUp={this.onUp}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}