{"ast":null,"code":"var _jsxFileName = \"G:\\\\reactwebsite\\\\snakegame\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Snake from \"./Snake\";\nimport Food from \"./Food\";\nimport Button from \"./Button\";\nimport Menu from \"./Menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomFood = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  return [x, y];\n};\nconst initialState = {\n  food: getRandomFood(),\n  direction: \"RIGHT\",\n  speed: 100,\n  route: \"menu\",\n  snakeDots: [[0, 0], [0, 2]]\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.onKeyDown = e => {\n      e = e || window.event;\n      switch (e.keyCode) {\n        case 37:\n          this.setState({\n            direction: \"LEFT\"\n          });\n          break;\n        case 38:\n          this.setState({\n            direction: \"UP\"\n          });\n          break;\n        case 39:\n          this.setState({\n            direction: \"RIGHT\"\n          });\n          break;\n        case 40:\n          this.setState({\n            direction: \"DOWN\"\n          });\n          break;\n      }\n    };\n    this.moveSnake = () => {\n      let dots = [...this.state.snakeDots];\n      let head = dots[dots.length - 1];\n      if (this.state.route === \"game\") {\n        switch (this.state.direction) {\n          case \"RIGHT\":\n            head = [head[0] + 2, head[1]];\n            break;\n          case \"LEFT\":\n            head = [head[0] - 2, head[1]];\n            break;\n          case \"DOWN\":\n            head = [head[0], head[1] + 2];\n            break;\n          case \"UP\":\n            head = [head[0], head[1] - 2];\n            break;\n        }\n        dots.push(head);\n        dots.shift();\n        this.setState({\n          snakeDots: dots\n        });\n      }\n    };\n    this.onRouteChange = () => {\n      this.setState({\n        route: \"game\"\n      });\n    };\n    this.onDown = () => {\n      let dots = [...this.state.snakeDots];\n      let head = dots[dots.length - 1];\n      head = [head[0], head[1] + 2];\n      dots.push(head);\n      dots.shift();\n      this.setState({\n        direction: \"DOWN\",\n        snakeDots: dots\n      });\n    };\n    this.onUp = () => {\n      let dots = [...this.state.snakeDots];\n      let head = dots[dots.length - 1];\n      head = [head[0], head[1] - 2];\n      dots.push(head);\n      dots.shift();\n      this.setState({\n        direction: \"UP\",\n        snakeDots: dots\n      });\n    };\n    this.onRight = () => {\n      let dots = [...this.state.snakeDots];\n      let head = dots[dots.length - 1];\n      head = [head[0] + 2, head[1]];\n      dots.push(head);\n      dots.shift();\n      this.setState({\n        direction: \"RIGHT\",\n        snakeDots: dots\n      });\n    };\n    this.onLeft = () => {\n      let dots = [...this.state.snakeDots];\n      let head = dots[dots.length - 1];\n      head = [head[0] - 2, head[1]];\n      dots.push(head);\n      dots.shift();\n      this.setState({\n        direction: \"LEFT\",\n        snakeDots: dots\n      });\n    };\n    this.state = initialState;\n  }\n  componentDidMount() {\n    setInterval(this.moveSnake, this.state.speed);\n    document.onkeydown = this.onKeyDown;\n  }\n  componentDidUpdate() {\n    this.onSnakeOutOfBounds();\n    this.onSnakeCollapsed();\n    this.onSnakeEats();\n  }\n  onSnakeOutOfBounds() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if (this.state.route === \"game\") {\n      if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n        this.gameOver();\n      }\n    }\n  }\n  onSnakeCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] == dot[0] && head[1] == dot[1]) {\n        this.gameOver();\n      }\n    });\n  }\n  onSnakeEats() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n    if (head[0] == food[0] && head[1] == food[1]) {\n      this.setState({\n        food: getRandomFood()\n      });\n      this.increaseSnake();\n      this.increaseSpeed();\n    }\n  }\n  increaseSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([]);\n    this.setState({\n      snakeDots: newSnake\n    });\n  }\n  increaseSpeed() {\n    if (this.state.speed > 10) {\n      this.setState({\n        speed: this.state.speed - 20\n      });\n    }\n  }\n  gameOver() {\n    alert(`GAME OVER, your score is ${this.state.snakeDots.length - 2}`);\n    this.setState(initialState);\n  }\n  render() {\n    const {\n      route,\n      snakeDots,\n      food\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: route === \"menu\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Menu, {\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-area\",\n          children: [/*#__PURE__*/_jsxDEV(Snake, {\n            snakeDots: snakeDots\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Food, {\n            dot: food\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onDown: this.onDown,\n          onLeft: this.onLeft,\n          onRight: this.onRight,\n          onUp: this.onUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Snake","Food","Button","Menu","jsxDEV","_jsxDEV","getRandomFood","min","max","x","Math","floor","random","y","initialState","food","direction","speed","route","snakeDots","App","constructor","onKeyDown","e","window","event","keyCode","setState","moveSnake","dots","state","head","length","push","shift","onRouteChange","onDown","onUp","onRight","onLeft","componentDidMount","setInterval","document","onkeydown","componentDidUpdate","onSnakeOutOfBounds","onSnakeCollapsed","onSnakeEats","gameOver","snake","pop","forEach","dot","increaseSnake","increaseSpeed","newSnake","unshift","alert","render","children","fileName","_jsxFileName","lineNumber","columnNumber","className"],"sources":["G:/reactwebsite/snakegame/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Snake from \"./Snake\";\nimport Food from \"./Food\";\nimport Button from \"./Button\";\nimport Menu from \"./Menu\";\n\nconst getRandomFood = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  return [x, y];\n};\n\nconst initialState = {\n  food: getRandomFood(),\n  direction: \"RIGHT\",\n  speed: 100,\n  route: \"menu\",\n  snakeDots: [[0, 0], [0, 2]]\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    setInterval(this.moveSnake, this.state.speed);\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate() {\n    this.onSnakeOutOfBounds();\n    this.onSnakeCollapsed();\n    this.onSnakeEats();\n  }\n\n  onKeyDown = e => {\n    e = e || window.event;\n    switch (e.keyCode) {\n      case 37:\n        this.setState({ direction: \"LEFT\" });\n        break;\n      case 38:\n        this.setState({ direction: \"UP\" });\n        break;\n      case 39:\n        this.setState({ direction: \"RIGHT\" });\n        break;\n      case 40:\n        this.setState({ direction: \"DOWN\" });\n        break;\n    }\n  };\n\n  moveSnake = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n    if (this.state.route === \"game\") {\n      switch (this.state.direction) {\n        case \"RIGHT\":\n          head = [head[0] + 2, head[1]];\n          break;\n        case \"LEFT\":\n          head = [head[0] - 2, head[1]];\n          break;\n        case \"DOWN\":\n          head = [head[0], head[1] + 2];\n          break;\n        case \"UP\":\n          head = [head[0], head[1] - 2];\n          break;\n      }\n      dots.push(head);\n      dots.shift();\n      this.setState({\n        snakeDots: dots\n      });\n    }\n  };\n\n  onSnakeOutOfBounds() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if (this.state.route === \"game\") {\n      if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n        this.gameOver();\n      }\n    }\n  }\n\n  onSnakeCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] == dot[0] && head[1] == dot[1]) {\n        this.gameOver();\n      }\n    });\n  }\n\n  onSnakeEats() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n    if (head[0] == food[0] && head[1] == food[1]) {\n      this.setState({\n        food: getRandomFood()\n      });\n      this.increaseSnake();\n      this.increaseSpeed();\n    }\n  }\n\n  increaseSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([]);\n    this.setState({\n      snakeDots: newSnake\n    });\n  }\n\n  increaseSpeed() {\n    if (this.state.speed > 10) {\n      this.setState({\n        speed: this.state.speed - 20\n      });\n    }\n  }\n\n  onRouteChange = () => {\n    this.setState({\n      route: \"game\"\n    });\n  };\n\n  gameOver() {\n    alert(`GAME OVER, your score is ${this.state.snakeDots.length - 2}`);\n    this.setState(initialState);\n  }\n\n  onDown = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n\n    head = [head[0], head[1] + 2];\n    dots.push(head);\n    dots.shift();\n    this.setState({\n      direction: \"DOWN\",\n      snakeDots: dots\n    });\n  };\n\n  onUp = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n\n    head = [head[0], head[1] - 2];\n    dots.push(head);\n    dots.shift();\n    this.setState({\n      direction: \"UP\",\n      snakeDots: dots\n    });\n  };\n\n  onRight = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n\n    head = [head[0] + 2, head[1]];\n    dots.push(head);\n    dots.shift();\n    this.setState({\n      direction: \"RIGHT\",\n      snakeDots: dots\n    });\n  };\n\n  onLeft = () => {\n    let dots = [...this.state.snakeDots];\n    let head = dots[dots.length - 1];\n\n    head = [head[0] - 2, head[1]];\n    dots.push(head);\n    dots.shift();\n    this.setState({\n      direction: \"LEFT\",\n      snakeDots: dots\n    });\n  };\n\n  render() {\n    const { route, snakeDots, food } = this.state;\n    return (\n      <div>\n        {route === \"menu\" ? (\n          <div>\n            <Menu onRouteChange={this.onRouteChange} />\n          </div>\n        ) : (\n          <div>\n            <div className=\"game-area\">\n              <Snake snakeDots={snakeDots} />\n              <Food dot={food} />\n            </div>\n            <Button\n              onDown={this.onDown}\n              onLeft={this.onLeft}\n              onRight={this.onRight}\n              onUp={this.onUp}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}